// Code generated by protoc-gen-go. DO NOT EDIT.
// source: goods_common.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 错误信息
type Error struct {
	// 错误码
	ErrorCode uint32 `protobuf:"varint,1,opt,name=errorCode" json:"errorCode,omitempty"`
	// 展示给开发这记录日志用的错误信息
	ErrorMessageForDeveloper string `protobuf:"bytes,2,opt,name=errorMessageForDeveloper" json:"errorMessageForDeveloper,omitempty"`
	// 展示给用户查看的错误信息
	ErrorMessageForUser string `protobuf:"bytes,3,opt,name=errorMessageForUser" json:"errorMessageForUser,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Error) GetErrorCode() uint32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *Error) GetErrorMessageForDeveloper() string {
	if m != nil {
		return m.ErrorMessageForDeveloper
	}
	return ""
}

func (m *Error) GetErrorMessageForUser() string {
	if m != nil {
		return m.ErrorMessageForUser
	}
	return ""
}

func init() {
	proto.RegisterType((*Error)(nil), "goods.pkg.rpc.protos.Error")
}

func init() { proto.RegisterFile("goods_common.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xcf, 0xcf, 0x4f,
	0x29, 0x8e, 0x4f, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12,
	0x01, 0x8b, 0xe9, 0x15, 0x64, 0xa7, 0xeb, 0x15, 0x15, 0x24, 0x43, 0x04, 0x8b, 0x95, 0x26, 0x33,
	0x72, 0xb1, 0xba, 0x16, 0x15, 0xe5, 0x17, 0x09, 0xc9, 0x70, 0x71, 0xa6, 0x82, 0x18, 0xce, 0xf9,
	0x29, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xbc, 0x41, 0x08, 0x01, 0x21, 0x2b, 0x2e, 0x09, 0x30,
	0xc7, 0x37, 0xb5, 0xb8, 0x38, 0x31, 0x3d, 0xd5, 0x2d, 0xbf, 0xc8, 0x25, 0xb5, 0x2c, 0x35, 0x27,
	0xbf, 0x20, 0xb5, 0x48, 0x82, 0x49, 0x81, 0x51, 0x83, 0x33, 0x08, 0xa7, 0xbc, 0x90, 0x01, 0x97,
	0x30, 0x9a, 0x5c, 0x68, 0x71, 0x6a, 0x91, 0x04, 0x33, 0x58, 0x1b, 0x36, 0x29, 0x27, 0x8e, 0x28,
	0x36, 0x88, 0xfb, 0x92, 0x20, 0xb4, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x15, 0x09, 0x0c, 0xee,
	0xd2, 0x00, 0x00, 0x00,
}
